{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMAgQbNoZbVX65n0bgTBmaT"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"-QYPaZaYR5Yj"},"outputs":[],"source":["import pandas as pd\n","\n","url = \"https://raw.githubusercontent.com/datasciencedojo/datasets/master/titanic.csv\"\n","df = pd.read_csv(url)"]},{"cell_type":"code","source":["df.shape\n","df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KW_02wiIR84p","executionInfo":{"status":"ok","timestamp":1744710697562,"user_tz":-330,"elapsed":41,"user":{"displayName":"Subhash _17","userId":"10371011045578673846"}},"outputId":"dc92bd64-f610-473e-8bac-604377a72925"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 12 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  891 non-null    int64  \n"," 1   Survived     891 non-null    int64  \n"," 2   Pclass       891 non-null    int64  \n"," 3   Name         891 non-null    object \n"," 4   Sex          891 non-null    object \n"," 5   Age          714 non-null    float64\n"," 6   SibSp        891 non-null    int64  \n"," 7   Parch        891 non-null    int64  \n"," 8   Ticket       891 non-null    object \n"," 9   Fare         891 non-null    float64\n"," 10  Cabin        204 non-null    object \n"," 11  Embarked     889 non-null    object \n","dtypes: float64(2), int64(5), object(5)\n","memory usage: 83.7+ KB\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"6aq2_yGnSC7L","executionInfo":{"status":"ok","timestamp":1744710700473,"user_tz":-330,"elapsed":135,"user":{"displayName":"Subhash _17","userId":"10371011045578673846"}},"outputId":"96d8aa62-9edb-49db-9af6-592355ad7bac"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       PassengerId    Survived      Pclass         Age       SibSp  \\\n","count   891.000000  891.000000  891.000000  714.000000  891.000000   \n","mean    446.000000    0.383838    2.308642   29.699118    0.523008   \n","std     257.353842    0.486592    0.836071   14.526497    1.102743   \n","min       1.000000    0.000000    1.000000    0.420000    0.000000   \n","25%     223.500000    0.000000    2.000000   20.125000    0.000000   \n","50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n","75%     668.500000    1.000000    3.000000   38.000000    1.000000   \n","max     891.000000    1.000000    3.000000   80.000000    8.000000   \n","\n","            Parch        Fare  \n","count  891.000000  891.000000  \n","mean     0.381594   32.204208  \n","std      0.806057   49.693429  \n","min      0.000000    0.000000  \n","25%      0.000000    7.910400  \n","50%      0.000000   14.454200  \n","75%      0.000000   31.000000  \n","max      6.000000  512.329200  "],"text/html":["\n","  <div id=\"df-e21da38c-1146-41fe-bdc3-ed96ad7322c0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>714.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>446.000000</td>\n","      <td>0.383838</td>\n","      <td>2.308642</td>\n","      <td>29.699118</td>\n","      <td>0.523008</td>\n","      <td>0.381594</td>\n","      <td>32.204208</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>257.353842</td>\n","      <td>0.486592</td>\n","      <td>0.836071</td>\n","      <td>14.526497</td>\n","      <td>1.102743</td>\n","      <td>0.806057</td>\n","      <td>49.693429</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.420000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>223.500000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>20.125000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.910400</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>446.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.454200</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>668.500000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>38.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>31.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>891.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>80.000000</td>\n","      <td>8.000000</td>\n","      <td>6.000000</td>\n","      <td>512.329200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e21da38c-1146-41fe-bdc3-ed96ad7322c0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e21da38c-1146-41fe-bdc3-ed96ad7322c0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e21da38c-1146-41fe-bdc3-ed96ad7322c0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-10032757-6eb9-4b2a-b51e-abc8171afe17\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-10032757-6eb9-4b2a-b51e-abc8171afe17')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-10032757-6eb9-4b2a-b51e-abc8171afe17 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"PassengerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 320.8159711429856,\n        \"min\": 1.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          891.0,\n          446.0,\n          668.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 314.8713661874558,\n        \"min\": 0.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.3838383838383838,\n          1.0,\n          0.4865924542648585\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 314.2523437079693,\n        \"min\": 0.8360712409770513,\n        \"max\": 891.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          891.0,\n          2.308641975308642,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 242.9056731818781,\n        \"min\": 0.42,\n        \"max\": 714.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          29.69911764705882,\n          28.0,\n          714.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SibSp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 314.4908277465442,\n        \"min\": 0.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          891.0,\n          0.5230078563411896,\n          8.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 314.65971717879,\n        \"min\": 0.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.38159371492704824,\n          6.0,\n          0.8060572211299559\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 330.6256632228577,\n        \"min\": 0.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          32.204207968574636,\n          14.4542,\n          891.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"9225fxl1Spl9","executionInfo":{"status":"ok","timestamp":1744710703396,"user_tz":-330,"elapsed":257,"user":{"displayName":"Subhash _17","userId":"10371011045578673846"}},"outputId":"78fd752e-69d7-4b43-ad5c-20689022512c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Survived  Pclass  \\\n","0            1         0       3   \n","1            2         1       1   \n","2            3         1       3   \n","3            4         1       1   \n","4            5         0       3   \n","\n","                                                Name     Sex   Age  SibSp  \\\n","0                            Braund, Mr. Owen Harris    male  22.0      1   \n","1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n","2                             Heikkinen, Miss. Laina  female  26.0      0   \n","3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n","4                           Allen, Mr. William Henry    male  35.0      0   \n","\n","   Parch            Ticket     Fare Cabin Embarked  \n","0      0         A/5 21171   7.2500   NaN        S  \n","1      0          PC 17599  71.2833   C85        C  \n","2      0  STON/O2. 3101282   7.9250   NaN        S  \n","3      0            113803  53.1000  C123        S  \n","4      0            373450   8.0500   NaN        S  "],"text/html":["\n","  <div id=\"df-ed895f86-e94c-41fb-9887-3858a87b2f11\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>C123</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed895f86-e94c-41fb-9887-3858a87b2f11')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ed895f86-e94c-41fb-9887-3858a87b2f11 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ed895f86-e94c-41fb-9887-3858a87b2f11');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a0567d1e-f6e1-4a87-bd4e-607c5912e8c7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a0567d1e-f6e1-4a87-bd4e-607c5912e8c7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a0567d1e-f6e1-4a87-bd4e-607c5912e8c7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"PassengerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 257,\n        \"min\": 1,\n        \"max\": 891,\n        \"num_unique_values\": 891,\n        \"samples\": [\n          710,\n          440,\n          841\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 891,\n        \"samples\": [\n          \"Moubarek, Master. Halim Gonios (\\\"William George\\\")\",\n          \"Kvillner, Mr. Johan Henrik Johannesson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"female\",\n          \"male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.526497332334044,\n        \"min\": 0.42,\n        \"max\": 80.0,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          0.75,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SibSp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ticket\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 681,\n        \"samples\": [\n          \"11774\",\n          \"248740\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.693428597180905,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          11.2417,\n          51.8625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 147,\n        \"samples\": [\n          \"D45\",\n          \"B49\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Embarked\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"S\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":460},"id":"aoQhvlkWStJH","executionInfo":{"status":"ok","timestamp":1744710706832,"user_tz":-330,"elapsed":50,"user":{"displayName":"Subhash _17","userId":"10371011045578673846"}},"outputId":"9f10c034-58d3-4d20-9d40-41002e8f8be0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId      0\n","Survived         0\n","Pclass           0\n","Name             0\n","Sex              0\n","Age            177\n","SibSp            0\n","Parch            0\n","Ticket           0\n","Fare             0\n","Cabin          687\n","Embarked         2\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>PassengerId</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Survived</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Pclass</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>177</td>\n","    </tr>\n","    <tr>\n","      <th>SibSp</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Parch</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Ticket</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Fare</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Cabin</th>\n","      <td>687</td>\n","    </tr>\n","    <tr>\n","      <th>Embarked</th>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# Fill missing Age with median\n","df['Age']=df['Age'].fillna(df['Age'].median())"],"metadata":{"id":"vbY4BfRtS7hc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Fill missing Embarked with most common value\n","df['Embarked']=df['Embarked'].fillna(df['Embarked'].mode()[0])"],"metadata":{"id":"kY-IUUW5T7A9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Drop Cabin (too many missing values\n","df.drop(columns='Cabin', inplace=True)"],"metadata":{"id":"0jL0VaXlU_KX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PrMIVye7VKzh","executionInfo":{"status":"ok","timestamp":1744710720511,"user_tz":-330,"elapsed":17,"user":{"displayName":"Subhash _17","userId":"10371011045578673846"}},"outputId":"81ca923f-a119-4237-882f-964ba74b6524"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 11 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  891 non-null    int64  \n"," 1   Survived     891 non-null    int64  \n"," 2   Pclass       891 non-null    int64  \n"," 3   Name         891 non-null    object \n"," 4   Sex          891 non-null    object \n"," 5   Age          891 non-null    float64\n"," 6   SibSp        891 non-null    int64  \n"," 7   Parch        891 non-null    int64  \n"," 8   Ticket       891 non-null    object \n"," 9   Fare         891 non-null    float64\n"," 10  Embarked     891 non-null    object \n","dtypes: float64(2), int64(5), object(4)\n","memory usage: 76.7+ KB\n"]}]},{"cell_type":"code","source":["# Create a new column: Title from Name\n","df['Title'] = df['Name'].str.extract(' ([A-Za-z]+)\\.', expand=False)\n"],"metadata":{"id":"8TCzyMWTVO5q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NvRoyjzGWS2O","executionInfo":{"status":"ok","timestamp":1744710724919,"user_tz":-330,"elapsed":16,"user":{"displayName":"Subhash _17","userId":"10371011045578673846"}},"outputId":"226a84a3-68f9-4799-a405-aff3f6cda521"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 12 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  891 non-null    int64  \n"," 1   Survived     891 non-null    int64  \n"," 2   Pclass       891 non-null    int64  \n"," 3   Name         891 non-null    object \n"," 4   Sex          891 non-null    object \n"," 5   Age          891 non-null    float64\n"," 6   SibSp        891 non-null    int64  \n"," 7   Parch        891 non-null    int64  \n"," 8   Ticket       891 non-null    object \n"," 9   Fare         891 non-null    float64\n"," 10  Embarked     891 non-null    object \n"," 11  Title        891 non-null    object \n","dtypes: float64(2), int64(5), object(5)\n","memory usage: 83.7+ KB\n"]}]},{"cell_type":"code","source":["df['Title'] = df['Title'].replace(['Lady', 'Countess','Capt','Col',\n","                                   'Don', 'Dr', 'Major', 'Rev', 'Sir',\n","                                   'Jonkheer', 'Dona'], 'Rare')\n","\n","df['Title'] = df['Title'].replace({'Mlle': 'Miss', 'Ms': 'Miss', 'Mme': 'Mrs'})\n"],"metadata":{"id":"HF-oZo3QWV6P"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['Sex']=df['Sex'].map({'male':0,'female':1})"],"metadata":{"id":"1JOKQ7ZkWkg-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['Embarked']=df['Embarked'].map({'S':0,'C':1,'Q':2})"],"metadata":{"id":"LYIzTOzXXNQB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["title_map = {'Mr': 0, 'Miss': 1, 'Mrs': 2, 'Master': 3, 'Rare': 4}\n","df['Title']=df['Title'].map(title_map)"],"metadata":{"id":"HSEVsD1fXnXL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.drop(columns=['Name', 'Ticket', 'PassengerId'], inplace=True)\n"],"metadata":{"id":"AGdHM4S5X7Cu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#handson\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","sns.countplot(x='Title',hue='Survived',data=df)\n","plt.title('Title vs Survived')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"YU429zKCYDmg","executionInfo":{"status":"ok","timestamp":1744710736499,"user_tz":-330,"elapsed":1360,"user":{"displayName":"Subhash _17","userId":"10371011045578673846"}},"outputId":"2062ea3c-e7d2-4d8f-e7ec-7e83bf45438c"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAjsAAAHHCAYAAABZbpmkAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAMjlJREFUeJzt3XtUVeW+//HPAgS5EyqgCWrqztjeEkvZba9RaObRLXkpMjSHNdxQGW0rRqVpdjTtYhdvp7NNyzzSZWNpqXkosBLLaFNqeakfpg25dQEUEgTm74+G67RCTRGYy4f3a4w1hvOZz5zzO9fcDT77mc+cy2FZliUAAABDedhdAAAAQFMi7AAAAKMRdgAAgNEIOwAAwGiEHQAAYDTCDgAAMBphBwAAGI2wAwAAjEbYAQAARiPsAC3YlClT1Llz53Pq++ijj8rhcDRtQS3A0KFDNXTo0GY/7qFDh+RwOLR69epmPzZgN8IOYBiHw3FOn6ysrHrbVlZW6tFHHz3tuovRRx99pJEjR+rSSy9V69atFRUVpdGjR2vdunV2lwagGXnZXQCAxvXKK6+4LL/88svatm1bvfYrrrhCL774ourq6pxtlZWVmjt3riTZMvrQmF5//XVNnDhRffv21T333KNLLrlE+fn52r59u1588UXdcsstttT13nvv2XJcoCUj7ACGufXWW12Wd+7cqW3bttVrN92jjz6q6Oho7dy5U97e3i7riouLG+04FRUV8vf3P+f+v68FQNPjNhbQgv12zs6hQ4fUrl07SdLcuXOdt7seffTRs+5j7dq1iomJka+vr0JDQzVp0iQdOXLkrNu88cYbcjgcys7Orrdu5cqVcjgc2rNnjySpsLBQU6dOVceOHeXj46P27dtrzJgxOnTo0FmP8e233+qqq646bbgICwtz/jsrK+u0t/VON8dlypQpCggI0LfffqsbbrhBgYGBSkxMVEpKigICAlRZWVnvWDfffLMiIiJUW1sryXXOTlFRkby8vJyjab+1f/9+ORwOvfDCC8620tJSzZw5U5GRkfLx8VG3bt30xBNPuIzOneo3ZcoUBQcHKyQkRElJSSotLT3r9wWYjLADQJLUrl07LV++XJL0t7/9Ta+88opeeeUVjRs37ozbPP7447rtttvUvXt3Pf3005o5c6YyMzM1ePDgs/5xHTVqlAICAvTaa6/VW5eenq4///nP6tmzpyQpISFBGRkZmjp1qpYtW6a7775bx44d0+HDh896Pp06dVJmZqa+//77czj7c1dTU6P4+HiFhYXpySefVEJCgiZOnKiKigq98847Ln0rKyu1ceNG3XTTTfL09Ky3r/DwcA0ZMuSM34Onp6fGjx/v3NeQIUO0du1a3XbbbXruued0zTXXKC0tTampqc7tLMvSmDFj9Morr+jWW2/V/Pnz9f333yspKalRvwfgomIBMFpycrJ1pv/Uk5KSrE6dOjmXS0pKLEnWnDlz6vWdM2eOy34OHTpkeXp6Wo8//rhLv927d1teXl712n/v5ptvtsLCwqyamhpnW0FBgeXh4WHNmzfPsizL+vnnny1J1uLFi//oNOv55z//aUmyvL29rWHDhlmPPPKI9eGHH1q1tbUu/T744ANLkvXBBx+4tOfn51uSrJdeesnZlpSUZEmyHnzwQZe+dXV11qWXXmolJCS4tL/22muWJGv79u3OtiFDhlhDhgxxLq9cudKSZO3evdtl2+joaGv48OHO5ccee8zy9/e3Dhw44NLvwQcftDw9Pa3Dhw9blmVZGzZssCRZixYtcvapqamxBg0aVO98gJaCkR0ADfKvf/1LdXV1mjBhgn744QfnJyIiQt27d9cHH3xw1u0nTpyo4uJil9tHb7zxhurq6jRx4kRJkq+vr7y9vZWVlaWff/75vOq7/fbbtWXLFg0dOlQfffSRHnvsMQ0aNEjdu3fXjh07zvt8f2vGjBkuyw6HQ+PHj9e7776r48ePO9vT09N16aWX6q9//esZ9zVu3Dh5eXkpPT3d2bZnzx599dVXzu9B+nXC9aBBg3TJJZe4fN9xcXGqra3V9u3bJUnvvvuuvLy8XGr09PTUXXfddUHnDFzMCDsAGuTgwYOyLEvdu3dXu3btXD5ff/31H04CHjFihIKDg13+yKenp6tv377605/+JEny8fHRE088oc2bNys8PFyDBw/WokWLVFhYeE41xsfHa+vWrSotLdX27duVnJys7777TjfeeGODJyl7eXmpY8eO9donTpyoX375RW+//bYk6fjx43r33Xc1fvz4s76fqG3btrr22mtdbmWlp6fLy8vL5RbiwYMHtWXLlnrfdVxcnKT/m3T93XffqX379goICHA5zuWXX96g8wVMwNNYABqkrq5ODodDmzdvPu18lN//sf09Hx8fjR07VhkZGVq2bJmKior08ccf6z//8z9d+s2cOVOjR4/Whg0btHXrVj3yyCNasGCB3n//fV155ZXnVKufn58GDRqkQYMGqW3btpo7d642b96spKSkMwaRUxOKT1e3h0f9/584cOBAde7cWa+99ppuueUWbdy4Ub/88ovL6MyZTJo0SVOnTlVeXp769u2r1157Tddee63atm3r7FNXV6frrrtO999//2n3cSogAqiPsAPA6XzekNy1a1dZlqUuXbo0+A/txIkTtWbNGmVmZurrr7+WZVmnDQddu3bVfffdp/vuu08HDx5U37599dRTT2nt2rXnfcz+/ftLkgoKCiRJl1xyiSTVm1D93Xffnfe+J0yYoGeffVbl5eVKT09X586dNXDgwD/cbuzYsbrzzjudo1wHDhxQWlqaS5+uXbvq+PHjzpGcMzk1Mfv48eMugXP//v3nfT6AKbiNBcDJz89PUv0//Kczbtw4eXp6au7cubIsy2WdZVn68ccf/3AfcXFxCg0NVXp6utLT03X11VerS5cuzvWVlZU6ceKEyzZdu3ZVYGCgqqqqzrrvzMzM07a/++67kv7vtk6nTp3k6enpnPNyyrJly/6w/t+bOHGiqqqqtGbNGm3ZskUTJkw4p+1CQkIUHx+v1157TevXr5e3t7fGjh3r0mfChAnKycnR1q1b621fWlqqmpoaSdINN9ygmpoa55N10q+jVM8///x5nw9gCkZ2ADj5+voqOjpa6enp+tOf/qTQ0FD17NnT+Rj4b3Xt2lXz589XWlqaDh06pLFjxyowMFD5+fnKyMjQHXfcoX/84x9nPV6rVq00btw4rV+/XhUVFXryySdd1h84cEDXXnutJkyYoOjoaHl5eSkjI0NFRUWaNGnSWfc9ZswYdenSRaNHj1bXrl1VUVGh//3f/9XGjRt11VVXafTo0ZKk4OBgjR8/Xs8//7wcDoe6du2qTZs2NWhOT79+/dStWzc99NBDqqqqOqdbWKdMnDhRt956q5YtW6b4+HiFhIS4rJ81a5befvtt3XjjjZoyZYpiYmJUUVGh3bt364033tChQ4fUtm1bjR49Wtdcc40efPBBHTp0SNHR0frXv/6lsrKy8z4fwBi2PgsGoMmdz6PnlmVZO3bssGJiYixvb2+Xx9B//+j5KW+++ab117/+1fL397f8/f2tHj16WMnJydb+/fvPqb5t27ZZkiyHw2EdOXLEZd0PP/xgJScnWz169LD8/f2t4OBga8CAAdZrr732h/v9n//5H2vSpElW165dLV9fX6t169ZWdHS09dBDD1nl5eUufUtKSqyEhATLz8/PuuSSS6w777zT2rNnz2kfPff39z/rcR966CFLktWtW7fTrv/9o+enlJeXW76+vpYka+3atafd9tixY1ZaWprVrVs3y9vb22rbtq31l7/8xXryySet6upqZ78ff/zRmjx5shUUFGQFBwdbkydPtv7973/z6DlaLIdl/W78GQAAwCDM2QEAAEYj7AAAAKMRdgAAgNEIOwAAwGiEHQAAYDTCDgAAMBovFdSvvzlz9OhRBQYGntfr8gEAgH0sy9KxY8fUoUOH0/5m3SmEHUlHjx5VZGSk3WUAAIAGOHLkiDp27HjG9YQdSYGBgZJ+/bKCgoJsrgYAAJyL8vJyRUZGOv+OnwlhR//3S89BQUGEHQAALjJ/NAWFCcoAAMBohB0AAGA0wg4AADAac3YAAHADdXV1qq6utrsMt9KqVSt5enpe8H4IOwAA2Ky6ulr5+fmqq6uzuxS3ExISooiIiAt6Dx5hBwAAG1mWpYKCAnl6eioyMvKsL8drSSzLUmVlpYqLiyVJ7du3b/C+CDsAANiopqZGlZWV6tChg/z8/Owux634+vpKkoqLixUWFtbgW1rERwAAbFRbWytJ8vb2trkS93QqAJ48ebLB+yDsAADgBvhtxtNrjO+FsAMAAIxG2AEAAPVkZWXJ4XCotLS0SY8zZcoUjR07tkmPQdgBAMCNlZSUaMaMGYqKipKPj48iIiIUHx+vjz/+uEmP+5e//EUFBQUKDg5u0uM0B57GAgDAjSUkJKi6ulpr1qzRZZddpqKiImVmZurHH39s0P4sy1Jtba28vM4eAby9vRUREdGgY7gbRnYAAHBTpaWl+vDDD/XEE09o2LBh6tSpk66++mqlpaXpP/7jP3To0CE5HA7l5eW5bONwOJSVlSXp/25Hbd68WTExMfLx8dGqVavkcDi0b98+l+M988wz6tq1q8t2paWlKi8vl6+vrzZv3uzSPyMjQ4GBgaqsrJQkHTlyRBMmTFBISIhCQ0M1ZswYHTp0yNm/trZWqampCgkJUZs2bXT//ffLsqzG/+J+h7ADAICbCggIUEBAgDZs2KCqqqoL2teDDz6ohQsX6uuvv9ZNN92k/v3769VXX3Xp8+qrr+qWW26pt21QUJBuvPFGrVu3rl7/sWPHys/PTydPnlR8fLwCAwP14Ycf6uOPP1ZAQIBGjBjh/BmMp556SqtXr9aqVav00Ucf6aefflJGRsYFnde54DbWeYqZ9bLdJZxR7uLb7C4BANCIvLy8tHr1ak2fPl0rVqxQv379NGTIEE2aNEm9e/c+r33NmzdP1113nXM5MTFRL7zwgh577DFJ0oEDB5Sbm6u1a9eedvvExERNnjxZlZWV8vPzU3l5ud555x1nWElPT1ddXZ3++7//2/m4+EsvvaSQkBBlZWXp+uuv15IlS5SWlqZx48ZJklasWKGtW7ee9/dyvhjZAQDAjSUkJOjo0aN6++23NWLECGVlZalfv35avXr1ee2nf//+LsuTJk3SoUOHtHPnTkm/jtL069dPPXr0OO32N9xwg1q1aqW3335bkvTmm28qKChIcXFxkqQvvvhC33zzjQIDA50jUqGhoTpx4oS+/fZblZWVqaCgQAMGDHDu08vLq15dTYGwAwCAm2vdurWuu+46PfLII9qxY4emTJmiOXPmOH9H67fzXs70pmF/f3+X5YiICA0fPtx5a2rdunVKTEw8Yw3e3t666aabXPpPnDjROdH5+PHjiomJUV5ensvnwIEDp7011pwIOwAAXGSio6NVUVGhdu3aSZIKCgqc6347WfmPJCYmKj09XTk5Ofp//+//adKkSX/Yf8uWLdq7d6/ef/99l3DUr18/HTx4UGFhYerWrZvLJzg4WMHBwWrfvr0++eQT5zY1NTXKzc0953obirADAICb+vHHHzV8+HCtXbtWX375pfLz8/X6669r0aJFGjNmjHx9fTVw4EDnxOPs7Gw9/PDD57z/cePG6dixY5oxY4aGDRumDh06nLX/4MGDFRERocTERHXp0sXlllRiYqLatm2rMWPG6MMPP1R+fr6ysrJ099136/vvv5ck3XPPPVq4cKE2bNigffv26e9//3uTv7RQIuwAAOC2AgICNGDAAD3zzDMaPHiwevbsqUceeUTTp0/XCy+8IElatWqVampqFBMTo5kzZ2r+/PnnvP/AwECNHj1aX3zxxVlvYZ3icDh08803n7a/n5+ftm/frqioKI0bN05XXHGFpk2bphMnTigoKEiSdN9992ny5MlKSkpSbGysAgMD9be//e08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AABgNMIOAAAwGmEHAAAYjbADAACMRtgBAABGI+wAAACjEXYAAIDRCDsAAMBohB0AAGA0wg4AADAaYQcAABiNsAMAAIxG2AEAAEYj7AAAAKMRdgAAgNEIOwAAwGiEHQAAYDTCDgAAMBphBwAAGI2wAwAAjEbYAQAARmtQ2Bk+fLhKS0vrtZeXl2v48OEXWhMAAECjaVDYycrKUnV1db32EydO6MMPP7zgogAAABqL1/l0/vLLL53//uqrr1RYWOhcrq2t1ZYtW3TppZc2XnUAAAAX6LzCTt++feVwOORwOE57u8rX11fPP/98oxUHAABwoc4r7OTn58uyLF122WX69NNP1a5dO+c6b29vhYWFydPTs9GLBAAAaKjzCjudOnWSJNXV1TVJMQAAAI3tvMLObx08eFAffPCBiouL64Wf2bNnX3BhAAAAjaFBYefFF1/UjBkz1LZtW0VERMjhcDjXORwOwg4AAHAbDQo78+fP1+OPP64HHnigsesBAABoVA16z87PP/+s8ePHN3YtAAAAja5BYWf8+PF67733GrsWAACARteg21jdunXTI488op07d6pXr15q1aqVy/q77767UYoDAAC4UA0KO//1X/+lgIAAZWdnKzs722Wdw+Eg7AAAALfRoLCTn5/f2HUAAAA0iQbN2QEAALhYNGhk5/bbbz/r+lWrVjWoGAAAgMbWoLDz888/uyyfPHlSe/bsUWlp6Wl/IBQAAMAuDQo7GRkZ9drq6uo0Y8YMde3a9YKLAgAAaCyNNmfHw8NDqampeuaZZxprlwAAABesUScof/vtt6qpqWnMXQIAAFyQBt3GSk1NdVm2LEsFBQV65513lJSU1CiFAQAANIYGhZ1///vfLsseHh5q166dnnrqqT98UgsAAKA5NSjsfPDBB41dBwAAQJNoUNg5paSkRPv375ckXX755WrXrl2jFAUAANBYGjRBuaKiQrfffrvat2+vwYMHa/DgwerQoYOmTZumysrKxq4RAACgwRoUdlJTU5Wdna2NGzeqtLRUpaWleuutt5Sdna377ruvsWsEAABosAbdxnrzzTf1xhtvaOjQoc62G264Qb6+vpowYYKWL1/eWPUBAABckAaN7FRWVio8PLxee1hYGLexAACAW2lQ2ImNjdWcOXN04sQJZ9svv/yiuXPnKjY2ttGKAwAAuFANuo21ZMkSjRgx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\n"},"metadata":{}}]},{"cell_type":"code","source":["# Calculate correlation matrix\n","corr_matrix = df.corr()\n","\n","# Print the correlation matrix\n","print(corr_matrix)\n","\n","# Spot features that have high correlation with 'Survived'\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7CmDETzoYmdY","executionInfo":{"status":"ok","timestamp":1744710738820,"user_tz":-330,"elapsed":9,"user":{"displayName":"Subhash _17","userId":"10371011045578673846"}},"outputId":"ad4a46bc-aac0-4eb6-ced2-1260467e20d1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["          Survived    Pclass       Sex       Age     SibSp     Parch  \\\n","Survived  1.000000 -0.338481  0.543351 -0.064910 -0.035322  0.081629   \n","Pclass   -0.338481  1.000000 -0.131900 -0.339898  0.083081  0.018443   \n","Sex       0.543351 -0.131900  1.000000 -0.081163  0.114631  0.245489   \n","Age      -0.064910 -0.339898 -0.081163  1.000000 -0.233296 -0.172482   \n","SibSp    -0.035322  0.083081  0.114631 -0.233296  1.000000  0.414838   \n","Parch     0.081629  0.018443  0.245489 -0.172482  0.414838  1.000000   \n","Fare      0.257307 -0.549500  0.182333  0.096688  0.159651  0.216225   \n","Embarked  0.106811  0.045702  0.116569 -0.009165 -0.059961 -0.078665   \n","Title     0.407753 -0.173929  0.502713 -0.091211  0.269623  0.315784   \n","\n","              Fare  Embarked     Title  \n","Survived  0.257307  0.106811  0.407753  \n","Pclass   -0.549500  0.045702 -0.173929  \n","Sex       0.182333  0.116569  0.502713  \n","Age       0.096688 -0.009165 -0.091211  \n","SibSp     0.159651 -0.059961  0.269623  \n","Parch     0.216225 -0.078665  0.315784  \n","Fare      1.000000  0.062142  0.136310  \n","Embarked  0.062142  1.000000  0.045400  \n","Title     0.136310  0.045400  1.000000  \n"]}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iGAI5fJcZTrp","executionInfo":{"status":"ok","timestamp":1744710740874,"user_tz":-330,"elapsed":9,"user":{"displayName":"Subhash _17","userId":"10371011045578673846"}},"outputId":"1021e833-0617-440e-fd96-b462ea25ec9a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 9 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   Survived  891 non-null    int64  \n"," 1   Pclass    891 non-null    int64  \n"," 2   Sex       891 non-null    int64  \n"," 3   Age       891 non-null    float64\n"," 4   SibSp     891 non-null    int64  \n"," 5   Parch     891 non-null    int64  \n"," 6   Fare      891 non-null    float64\n"," 7   Embarked  891 non-null    int64  \n"," 8   Title     891 non-null    int64  \n","dtypes: float64(2), int64(7)\n","memory usage: 62.8 KB\n"]}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ArVcK-yYaZUB","executionInfo":{"status":"ok","timestamp":1744710742278,"user_tz":-330,"elapsed":33,"user":{"displayName":"Subhash _17","userId":"10371011045578673846"}},"outputId":"b25deeb4-91b2-4376-c6ed-1971df91fe3e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Survived  Pclass  Sex   Age  SibSp  Parch     Fare  Embarked  Title\n","0         0       3    0  22.0      1      0   7.2500         0      0\n","1         1       1    1  38.0      1      0  71.2833         1      2\n","2         1       3    1  26.0      0      0   7.9250         0      1\n","3         1       1    1  35.0      1      0  53.1000         0      2\n","4         0       3    0  35.0      0      0   8.0500         0      0"],"text/html":["\n","  <div id=\"df-d684c35c-fe2b-4172-b4be-9f3ac745c034\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d684c35c-fe2b-4172-b4be-9f3ac745c034')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d684c35c-fe2b-4172-b4be-9f3ac745c034 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d684c35c-fe2b-4172-b4be-9f3ac745c034');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4e4be5f8-0a56-43e1-ba87-bef12223166f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4e4be5f8-0a56-43e1-ba87-bef12223166f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4e4be5f8-0a56-43e1-ba87-bef12223166f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.019696550973194,\n        \"min\": 0.42,\n        \"max\": 80.0,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          0.75,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SibSp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.693428597180905,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          11.2417,\n          51.8625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Embarked\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Title\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":366},"id":"lt5dVkboadtA","executionInfo":{"status":"ok","timestamp":1744710746088,"user_tz":-330,"elapsed":5,"user":{"displayName":"Subhash _17","userId":"10371011045578673846"}},"outputId":"c5063e3b-49f7-495b-f88d-443637c995be"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Survived    0\n","Pclass      0\n","Sex         0\n","Age         0\n","SibSp       0\n","Parch       0\n","Fare        0\n","Embarked    0\n","Title       0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Survived</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Pclass</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>SibSp</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Parch</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Fare</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Embarked</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Title</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["df.to_csv('titanic_cleaned.csv', index=False)\n"],"metadata":{"id":"auBqSfiK2YeH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from google.colab import files\n","files.download('titanic_cleaned.csv')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"ALL-7FKL2rCD","executionInfo":{"status":"ok","timestamp":1744710914349,"user_tz":-330,"elapsed":59,"user":{"displayName":"Subhash _17","userId":"10371011045578673846"}},"outputId":"655e16f8-2b70-4442-c233-72135839ae64"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_817879fc-750b-4e3e-b75c-bacd89dbc16b\", \"titanic_cleaned.csv\", 22379)"]},"metadata":{}}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')\n"],"metadata":{"id":"LNsIegHe39AU","executionInfo":{"status":"ok","timestamp":1744814102623,"user_tz":-330,"elapsed":21328,"user":{"displayName":"Subhash _17","userId":"10371011045578673846"}},"outputId":"ed91ea70-9588-436c-afa3-115b4e143b94","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"kJy3Wzg6Beqw"},"execution_count":null,"outputs":[]}]}